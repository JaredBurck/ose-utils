# Usage: error_out <message> <error_code>
error_out() {
  echo "ERROR: ${1}"
  exit $2
}

# Usage: yum_install <yum options> <packages> <Exit on failure? true|false> <exit code>
yum_install() {
  options=${1}
  packages=${2?"No Packages Declared for Install. Something went wrong."}
  exit_on_failure=${3:-true}
  exit_code=${4:-$ERROR_CODE_YUM_FAILURE}

  message=$(yum -y ${options} install ${packages} 2>&1)
  if [ $? -ne 0 ]; then
    if [ $(echo ${message} | grep -c 'Error: Nothing to do') -eq 0 ] && $exit_on_failure; then
      error_out "Failed to install packages ${packages}
Message:
${message}" $exit_code
    fi
  fi
}

# Usage: get_hostnames "<ip address>,<ip address>,...,<ip address>" "<base dn>" "[<dns server ip>]"
get_hostnames() {
  # Can reverse lookup hostname for an ip with
  # dig -x 172.16.166.11 | sed -ne 's/.*\(node[0-9]*.ose.example.com\).*/\1/p'
  if [ -n "$3" ]; then
    local nameserver="@${3}"
  fi
  for ip in ${1//,/ }; do
    hostnames="${hostnames},$(dig $nameserver -x $ip | sed -n "s/.*\(\(master\|node\)[0-9]*.${2}\).*/\1/p" | sort | head -n1)"
  done
  # Strip off leading comma
  echo ${hostnames#,*}
}

# Usage: get_private_ips <private|public,private|public,...>
get_private_ips() {
  echo "$1" | sed 's/|[0-9]*.[0-9]*.[0-9]*.[0-9]*//g'
}

# Usage: get_public_ips <private|public,private|public,...>
get_public_ips() {
  echo "$1" | sed 's/[0-9]*.[0-9]*.[0-9]*.[0-9]*|//g'
}

# Usage: partition_disk <path_to_partition_conf_file>
function partition_disk() {
  input_file=${1}

  IFS=$'\r\n'
  FDISKVALUES=($(cat ${input_file}))
  unset IFS

  (echo n; \
   echo ${FDISKVALUES[1]%% *}; \
   echo ${FDISKVALUES[2]%% *}; \
   echo ${FDISKVALUES[3]%% *}; \
   echo ${FDISKVALUES[4]%% *}; \
   echo t; \
   echo ${FDISKVALUES[2]%% *}; \
   echo ${FDISKVALUES[5]%% *}; \
   echo w
  ) | fdisk ${FDISKVALUES[0]%% *} 
  rc=$?

  partprobe

  return ${rc}
}

setup_docker_storage() {
  docker_part_file=${1:-DEFAULT_DOCKER_PART_FILE}

  # Install and configure docker
  yum -y install docker &>/dev/null || error_out "Failed to install package docker"
  sed -i "s/OPTIONS='--selinux-enabled'/OPTIONS='--selinux-enabled --insecure-registry 172.30.0.0\/16'/" /etc/sysconfig/docker

  vgdisplay vg-docker &>/dev/null
  vg_rc=$?

  if [ ${vg_rc} -eq 0 ]; then
    echo "docker storage already configured!"
    return 0
  fi

  partition_disk ${docker_part_file}

  pvcreate /dev/vdb1
  vgcreate vg-docker /dev/vdb1

  cat << EOF > /etc/sysconfig/docker-storage-setup
VG=vg-docker
SETUP_LVM_THIN_POOL=yes
EOF

  # Let docker setup the storage based on the above config file
  docker-storage-setup

  return 0
}

setup_openshift_storage() {
  openshift_part_file=${1:-DEFAULT_OPENSHIFT_PART_FILE}

  vgdisplay vg-openshift &>/dev/null
  vg_rc=$?

  if [ ${vg_rc} -eq 0 ]; then
    echo "openshift storage already configured!"
    return 0
  fi

  partition_disk ${openshift_part_file}

  # Create LVM and set up /var/lib/openshift
  pvcreate /dev/vdb2
  vgcreate vg-openshift /dev/vdb2
  lvcreate -l 100%FREE -n lv-ose vg-openshift

  mkfs.xfs -q -f /dev/vg-openshift/lv-ose

  mkdir -p /var/lib/openshift
  echo "/dev/vg-openshift/lv-ose        /var/lib/openshift              xfs defaults 0 0" >> /etc/fstab

  mount -a

  return 0
}

